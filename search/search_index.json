{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Android\u5f00\u53d1\u5de5\u5177\u7c7b \u00b6 Gradle \u00b6 \u5728\u6839\u76ee\u5f55\u7684 build.gradle \u6dfb\u52a0\uff1a allprojects { repositories { // ... maven { url 'https://www.jitpack.io' } } } \u6dfb\u52a0\u914d\u7f6e\u548c\u4f9d\u8d56\uff1a \u6839\u636e\u81ea\u5df1\u9700\u6c42\u8fdb\u884c\u9009\u62e9 def android_utils = \"0.0.2-snapshot\" // \u6846\u67b6\u57fa\u7840\u5e93 api \"com.github.GuoYangGit.AndroidUtils:base:$android_utils\" // Log\u65e5\u5fd7\u5e93 api \"com.github.GuoYangGit.AndroidUtils:xloghelper:$android_utils\" // Kotlin\u5de5\u5177\u7c7b api \"com.github.GuoYangGit.AndroidUtils:utils-helper:$android_utils\" // \u89c6\u56fe\u7ed1\u5b9aViewBinding api \"com.github.GuoYangGit.AndroidUtils:viewbinding-helper:$android_utils\" \u6a21\u5757 \u00b6 \u540d\u79f0 \u7b80\u4ecb base Android \u6846\u67b6\u57fa\u7840\u5e93 xloghelper Log\u65e5\u5fd7\u5e93 utils-helpe Kotlin\u5de5\u5177\u7c7b viewbinding-helper \u89c6\u56fe\u7ed1\u5b9aViewBinding\u5de5\u5177\u7c7b","title":"\u9996\u9875"},{"location":"#android","text":"","title":"Android\u5f00\u53d1\u5de5\u5177\u7c7b"},{"location":"#gradle","text":"\u5728\u6839\u76ee\u5f55\u7684 build.gradle \u6dfb\u52a0\uff1a allprojects { repositories { // ... maven { url 'https://www.jitpack.io' } } } \u6dfb\u52a0\u914d\u7f6e\u548c\u4f9d\u8d56\uff1a \u6839\u636e\u81ea\u5df1\u9700\u6c42\u8fdb\u884c\u9009\u62e9 def android_utils = \"0.0.2-snapshot\" // \u6846\u67b6\u57fa\u7840\u5e93 api \"com.github.GuoYangGit.AndroidUtils:base:$android_utils\" // Log\u65e5\u5fd7\u5e93 api \"com.github.GuoYangGit.AndroidUtils:xloghelper:$android_utils\" // Kotlin\u5de5\u5177\u7c7b api \"com.github.GuoYangGit.AndroidUtils:utils-helper:$android_utils\" // \u89c6\u56fe\u7ed1\u5b9aViewBinding api \"com.github.GuoYangGit.AndroidUtils:viewbinding-helper:$android_utils\"","title":"Gradle"},{"location":"#_1","text":"\u540d\u79f0 \u7b80\u4ecb base Android \u6846\u67b6\u57fa\u7840\u5e93 xloghelper Log\u65e5\u5fd7\u5e93 utils-helpe Kotlin\u5de5\u5177\u7c7b viewbinding-helper \u89c6\u56fe\u7ed1\u5b9aViewBinding\u5de5\u5177\u7c7b","title":"\u6a21\u5757"},{"location":"base/","text":"Android\u6846\u67b6\u57fa\u7840\u6a21\u5757 \u00b6 \u8be5\u6a21\u5757\u662f Android \u9879\u76ee\u5feb\u901f\u5f00\u53d1\u7684\u57fa\u7840\u6a21\u5757\uff0c\u5305\u542b Activity/Fragment \u57fa\u7c7b\u3001\u5e38\u7528\u6269\u5c55\u7c7b\u3001\u9875\u9762\u72b6\u6001\u7c7b\u7b49\u3002 Gradle \u00b6 \u5728\u6839\u76ee\u5f55\u7684 build.gradle \u6dfb\u52a0\uff1a allprojects { repositories { // ... maven { url 'https://www.jitpack.io' } } } \u6dfb\u52a0\u914d\u7f6e\u548c\u4f9d\u8d56\uff1a api \"com.github.GuoYangGit.AndroidUtils:base:xxx\" \u4f7f\u7528 \u00b6 Application \u00b6 \u521b\u5efa\u81ea\u5df1\u7684 Application \u57fa\u7c7b\uff0c\u7ee7\u627f BaseApp \u3002 open class MvvmApplication : BaseApp () { override fun onCreate () { super . onCreate () // \u8fd9\u91cc\u6267\u884c\u81ea\u5df1\u7684\u4e1a\u52a1\u64cd\u4f5c\u903b\u8f91 } } Activity \u00b6 \u521b\u5efa\u81ea\u5df1\u7684 Activity \u57fa\u7c7b\uff0c\u7ee7\u627f BaseActivity \u3002 abstract class BaseBindingActivity < VB : ViewBinding > : BaseActivity (), ActivityBinding < VB > by ActivityBindingDelegate (), ILoading { private val viewDelegate : LoadingDelegate by lazy { LoadingDelegate ( this ) } override fun userDataBinding (): Boolean = true override fun initDataBind () { setContentViewWithBinding () } override fun layoutId (): Int = - 1 override fun showLoading ( message : String ) { viewDelegate . showLoading ( message ) } override fun dismissLoading () { viewDelegate . dismissLoading () } } Fragment \u00b6 \u521b\u5efa\u81ea\u5df1\u7684 Fragment \u57fa\u7c7b\uff0c\u7ee7\u627f BaseFragment \u3002 abstract class BaseBindingFragment < VB : ViewBinding > : BaseFragment (), FragmentBinding < VB > by FragmentBindingDelegate (), ILoading { private val viewDelegate : LoadingDelegate by lazy { LoadingDelegate ( requireContext ()) } override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle? ): View? = createViewWithBinding ( inflater , container ) override fun layoutId (): Int = - 1 override fun showLoading ( message : String ) { viewDelegate . showLoading ( message ) } override fun dismissLoading () { viewDelegate . dismissLoading () } } EventLiveData \u00b6 \u8be5\u7c7b\u662f LiveData \u6269\u5c55\u7c7b\uff0c\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3 LiveData \u6570\u636e\u5012\u704c\u95ee\u9898\u3002 // \u4f7f\u7528\u65b9\u5f0f\u548cLiveData\u4e00\u6837 val eventLiveData = EventLiveData < String > () // \u53d1\u9001\u4e8b\u4ef6 eventLiveData . postValue ( \"event\" ) // \u8ba2\u9605\u4e8b\u4ef6 eventLiveData . observe ( this ){ // do something } ContextExt \u00b6 Context \u76f8\u5173\u6269\u5c55\u7c7b \u65b9\u6cd5 \u8bf4\u660e Context.runMainProcess{} \u5224\u65ad\u5f53\u524d\u662f\u5426\u662f\u4e3b\u8fdb\u7a0b PermissionExt \u00b6 \u6743\u9650\u76f8\u5173\u6269\u5c55\u7c7b \u65b9\u6cd5 \u8bf4\u660e Activity/Fragment.requestReadOrWritePermissions{} \u8bfb\u5199\u6743\u9650(\u517c\u5bb9Android 13) Activity/Fragment.requestCameraPermissions{} \u76f8\u673a\u3001\u5f55\u97f3\u6743\u9650 Activity/Fragment.requestLocationPermissions{} \u5b9a\u4f4d\u6743\u9650(\u517c\u5bb9Android 12) Activity/Fragment.requestNotificationPermissions{} \u901a\u77e5\u6743\u9650(\u517c\u5bb9Android 13\u4ee5\u4e0b) Activity/Fragment.requestSystemAlertWindowPermissions{} \u60ac\u6d6e\u7a97\u6743\u9650 Activity/Fragment.requestWriteSettingPermissions{} \u7cfb\u7edf\u8bbe\u7f6e\u6743\u9650 Activity/Fragment.requestInstallPackagePermissions{} \u5141\u8bb8\u5b89\u88c5\u672a\u77e5\u6765\u6e90\u6743\u9650 \u4f7f\u7528\u793a\u4f8b\uff1a requestReadOrWritePermissions { allGranted , _ , _ -> if ( ! allGranted ) return @requestReadOrWritePermissions // do something } RecyclerViewExt \u00b6 RecyclerView \u6269\u5c55\u7c7b \u65b9\u6cd5 \u8bf4\u660e Rv.linear(orientation: Int,reverseLayout: Boolean) \u521b\u5efa\u7ebf\u6027\u5e03\u5c40 Rv.grid(spanCount: Int,orientation: Int,reverseLayout: Boolean) \u521b\u5efa\u7f51\u683c\u5e03\u5c40 Rv.staggered(spanCount: Int,orientation: Int) \u521b\u5efa\u7011\u5e03\u6d41\u5e03\u5c40 Rv.divider(block: DefaultDecoration.() -> Unit) \u521b\u5efa\u5206\u5272\u7ebf ViewExt \u00b6 View \u6269\u5c55\u7c7b \u65b9\u6cd5 \u8bf4\u660e View.doOnDoubleClick{} View\u53cc\u51fb\u4e8b\u4ef6 UiSate \u00b6 \u8be5\u7c7b\u4e3b\u8981\u7528\u6237\u5904\u7406 UI \u9875\u9762\u6570\u636e\u72b6\u6001 \u4f7f\u7528\u65b9\u6cd5\uff1a // \u901a\u8fc7ViewModel\u83b7\u53d6\u5230\u6570\u636e\u7684Flow // \u901a\u8fc7asUiStateFlow()\u65b9\u6cd5\u8f6c\u6362\u6210UiSate // \u6700\u7ec8\u5728Flow\u6d41\u7ec8\u7aef\u53ef\u4ee5\u4f7f\u7528doSuccess\u3001doError\u65b9\u6cd5\u8fdb\u884c\u4e8b\u4ef6\u5224\u65ad followViewModel . getFollowList ( index ) . asUiStateFlow () . launchAndCollectIn ( viewLifecycleOwner ) { it . doSuccess { list -> // do something }. doError { throwable -> // do something } } Weight \u00b6 \u901a\u7528\u81ea\u5b9a\u4e49 View \u5c01\u88c5 \u7c7b \u8bf4\u660e DefaultDecoration RecyclerView\u6700\u5f3a\u5927\u7684\u5206\u5272\u7ebf\u5de5\u5177 NestedScrollableHost \u6b64\u7c7b\u7528\u4e8e\u89e3\u51b3 ViewPager2 \u5d4c\u5957 ViewPager2 \u6216\u8005 RecyclerView \u7b49\u76f8\u4e92\u5d4c\u5957\u7684\u51b2\u7a81\u95ee\u9898 Api \u00b6 \u5177\u4f53\u67e5\u770b","title":"Base\u6a21\u5757"},{"location":"base/#android","text":"\u8be5\u6a21\u5757\u662f Android \u9879\u76ee\u5feb\u901f\u5f00\u53d1\u7684\u57fa\u7840\u6a21\u5757\uff0c\u5305\u542b Activity/Fragment \u57fa\u7c7b\u3001\u5e38\u7528\u6269\u5c55\u7c7b\u3001\u9875\u9762\u72b6\u6001\u7c7b\u7b49\u3002","title":"Android\u6846\u67b6\u57fa\u7840\u6a21\u5757"},{"location":"base/#gradle","text":"\u5728\u6839\u76ee\u5f55\u7684 build.gradle \u6dfb\u52a0\uff1a allprojects { repositories { // ... maven { url 'https://www.jitpack.io' } } } \u6dfb\u52a0\u914d\u7f6e\u548c\u4f9d\u8d56\uff1a api \"com.github.GuoYangGit.AndroidUtils:base:xxx\"","title":"Gradle"},{"location":"base/#_1","text":"","title":"\u4f7f\u7528"},{"location":"base/#application","text":"\u521b\u5efa\u81ea\u5df1\u7684 Application \u57fa\u7c7b\uff0c\u7ee7\u627f BaseApp \u3002 open class MvvmApplication : BaseApp () { override fun onCreate () { super . onCreate () // \u8fd9\u91cc\u6267\u884c\u81ea\u5df1\u7684\u4e1a\u52a1\u64cd\u4f5c\u903b\u8f91 } }","title":"Application"},{"location":"base/#activity","text":"\u521b\u5efa\u81ea\u5df1\u7684 Activity \u57fa\u7c7b\uff0c\u7ee7\u627f BaseActivity \u3002 abstract class BaseBindingActivity < VB : ViewBinding > : BaseActivity (), ActivityBinding < VB > by ActivityBindingDelegate (), ILoading { private val viewDelegate : LoadingDelegate by lazy { LoadingDelegate ( this ) } override fun userDataBinding (): Boolean = true override fun initDataBind () { setContentViewWithBinding () } override fun layoutId (): Int = - 1 override fun showLoading ( message : String ) { viewDelegate . showLoading ( message ) } override fun dismissLoading () { viewDelegate . dismissLoading () } }","title":"Activity"},{"location":"base/#fragment","text":"\u521b\u5efa\u81ea\u5df1\u7684 Fragment \u57fa\u7c7b\uff0c\u7ee7\u627f BaseFragment \u3002 abstract class BaseBindingFragment < VB : ViewBinding > : BaseFragment (), FragmentBinding < VB > by FragmentBindingDelegate (), ILoading { private val viewDelegate : LoadingDelegate by lazy { LoadingDelegate ( requireContext ()) } override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle? ): View? = createViewWithBinding ( inflater , container ) override fun layoutId (): Int = - 1 override fun showLoading ( message : String ) { viewDelegate . showLoading ( message ) } override fun dismissLoading () { viewDelegate . dismissLoading () } }","title":"Fragment"},{"location":"base/#eventlivedata","text":"\u8be5\u7c7b\u662f LiveData \u6269\u5c55\u7c7b\uff0c\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3 LiveData \u6570\u636e\u5012\u704c\u95ee\u9898\u3002 // \u4f7f\u7528\u65b9\u5f0f\u548cLiveData\u4e00\u6837 val eventLiveData = EventLiveData < String > () // \u53d1\u9001\u4e8b\u4ef6 eventLiveData . postValue ( \"event\" ) // \u8ba2\u9605\u4e8b\u4ef6 eventLiveData . observe ( this ){ // do something }","title":"EventLiveData"},{"location":"base/#contextext","text":"Context \u76f8\u5173\u6269\u5c55\u7c7b \u65b9\u6cd5 \u8bf4\u660e Context.runMainProcess{} \u5224\u65ad\u5f53\u524d\u662f\u5426\u662f\u4e3b\u8fdb\u7a0b","title":"ContextExt"},{"location":"base/#permissionext","text":"\u6743\u9650\u76f8\u5173\u6269\u5c55\u7c7b \u65b9\u6cd5 \u8bf4\u660e Activity/Fragment.requestReadOrWritePermissions{} \u8bfb\u5199\u6743\u9650(\u517c\u5bb9Android 13) Activity/Fragment.requestCameraPermissions{} \u76f8\u673a\u3001\u5f55\u97f3\u6743\u9650 Activity/Fragment.requestLocationPermissions{} \u5b9a\u4f4d\u6743\u9650(\u517c\u5bb9Android 12) Activity/Fragment.requestNotificationPermissions{} \u901a\u77e5\u6743\u9650(\u517c\u5bb9Android 13\u4ee5\u4e0b) Activity/Fragment.requestSystemAlertWindowPermissions{} \u60ac\u6d6e\u7a97\u6743\u9650 Activity/Fragment.requestWriteSettingPermissions{} \u7cfb\u7edf\u8bbe\u7f6e\u6743\u9650 Activity/Fragment.requestInstallPackagePermissions{} \u5141\u8bb8\u5b89\u88c5\u672a\u77e5\u6765\u6e90\u6743\u9650 \u4f7f\u7528\u793a\u4f8b\uff1a requestReadOrWritePermissions { allGranted , _ , _ -> if ( ! allGranted ) return @requestReadOrWritePermissions // do something }","title":"PermissionExt"},{"location":"base/#recyclerviewext","text":"RecyclerView \u6269\u5c55\u7c7b \u65b9\u6cd5 \u8bf4\u660e Rv.linear(orientation: Int,reverseLayout: Boolean) \u521b\u5efa\u7ebf\u6027\u5e03\u5c40 Rv.grid(spanCount: Int,orientation: Int,reverseLayout: Boolean) \u521b\u5efa\u7f51\u683c\u5e03\u5c40 Rv.staggered(spanCount: Int,orientation: Int) \u521b\u5efa\u7011\u5e03\u6d41\u5e03\u5c40 Rv.divider(block: DefaultDecoration.() -> Unit) \u521b\u5efa\u5206\u5272\u7ebf","title":"RecyclerViewExt"},{"location":"base/#viewext","text":"View \u6269\u5c55\u7c7b \u65b9\u6cd5 \u8bf4\u660e View.doOnDoubleClick{} View\u53cc\u51fb\u4e8b\u4ef6","title":"ViewExt"},{"location":"base/#uisate","text":"\u8be5\u7c7b\u4e3b\u8981\u7528\u6237\u5904\u7406 UI \u9875\u9762\u6570\u636e\u72b6\u6001 \u4f7f\u7528\u65b9\u6cd5\uff1a // \u901a\u8fc7ViewModel\u83b7\u53d6\u5230\u6570\u636e\u7684Flow // \u901a\u8fc7asUiStateFlow()\u65b9\u6cd5\u8f6c\u6362\u6210UiSate // \u6700\u7ec8\u5728Flow\u6d41\u7ec8\u7aef\u53ef\u4ee5\u4f7f\u7528doSuccess\u3001doError\u65b9\u6cd5\u8fdb\u884c\u4e8b\u4ef6\u5224\u65ad followViewModel . getFollowList ( index ) . asUiStateFlow () . launchAndCollectIn ( viewLifecycleOwner ) { it . doSuccess { list -> // do something }. doError { throwable -> // do something } }","title":"UiSate"},{"location":"base/#weight","text":"\u901a\u7528\u81ea\u5b9a\u4e49 View \u5c01\u88c5 \u7c7b \u8bf4\u660e DefaultDecoration RecyclerView\u6700\u5f3a\u5927\u7684\u5206\u5272\u7ebf\u5de5\u5177 NestedScrollableHost \u6b64\u7c7b\u7528\u4e8e\u89e3\u51b3 ViewPager2 \u5d4c\u5957 ViewPager2 \u6216\u8005 RecyclerView \u7b49\u76f8\u4e92\u5d4c\u5957\u7684\u51b2\u7a81\u95ee\u9898","title":"Weight"},{"location":"base/#api","text":"\u5177\u4f53\u67e5\u770b","title":"Api"},{"location":"utils-helper/","text":"Utils-helper \u00b6 \u662f\u4e00\u4e2a\u7b80\u5316 Android \u5f00\u53d1\u7684 Kotlin \u5de5\u5177\u5e93\uff0c\u53ef\u4ee5\u4f7f\u4ee3\u7801\u66f4\u52a0\u7b80\u6d01\u6613\u8bfb\u3002 \u76ee\u524d\u6709\u8d85\u8fc7 500 \u4e2a\u5e38\u7528\u65b9\u6cd5\u6216\u5c5e\u6027\uff0c\u80fd\u6709\u6548\u63d0\u9ad8\u5f00\u53d1\u6548\u7387 \u3002 Gradle \u00b6 \u5728\u6839\u76ee\u5f55\u7684 build.gradle \u6dfb\u52a0\uff1a allprojects { repositories { // ... maven { url 'https://www.jitpack.io' } } } \u6dfb\u52a0\u4f9d\u8d56\uff1a api \"com.github.GuoYangGit.AndroidUtils:utils-helper:xxx\" \u4e0b\u9762\u7528\u6cd5\u4e2d\u542b\u6709\u65b9\u62ec\u53f7 [] \u7684\u53c2\u6570\u662f\u53ef\u9009\u7684\u3002 Activity.kt \u00b6 \u65b9\u6cd5 \u8bf4\u660e [Activity].startActivity<T>(\"id\" to 5) \u542f\u52a8 Activity Activity.finishWithResult(\"id\" to 5, \"name\" to name) \u5173\u95ed Activity \u5e76\u8fd4\u56de\u7ed3\u679c activityList \u83b7\u53d6 Activity \u6808\u94fe\u8868 topActivity \u83b7\u53d6\u6808\u9876 Activity isActivityExistsInStack<SomeOtherActivity> \u5224\u65ad Activity \u662f\u5426\u5b58\u5728\u6808\u4e2d finishActivity<SomeOtherActivity> \u7ed3\u675f\u67d0\u4e2a Activity finishToActivity<SomeOtherActivity> \u7ed3\u675f\u5230\u67d0\u4e2a Activity finishAllActivities \u7ed3\u675f\u6240\u6709 Activity finishAllActivitiesExcept<T> \u7ed3\u675f\u9664\u67d0\u4e2a Activity \u4e4b\u5916\u7684\u6240\u6709 Activity finishAllActivitiesExceptNewest \u7ed3\u675f\u9664\u6700\u65b0 Activity \u4e4b\u5916\u7684\u6240\u6709 Activity ComponentActivity.pressBackTwiceToExitApp(toastText, [delayMillis]) \u53cc\u51fb\u8fd4\u56de\u9000\u51fa App ComponentActivity.pressBackTwiceToExitApp([delayMillis]) {...} \u53cc\u51fb\u8fd4\u56de\u9000\u51fa App\uff0c\u81ea\u5b9a\u4e49 Toast ComponentActivity.pressBackToNotExit() \u70b9\u51fb\u8fd4\u56de\u4e0d\u9000\u51fa App ComponentActivity.doOnBackPressed {...} \u76d1\u542c\u624b\u673a\u7684\u8fd4\u56de\u4e8b\u4ef6 Context.isPermissionGranted(permission) \u5224\u65ad\u662f\u5426\u6709\u6743\u9650 Application.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 application \u83b7\u53d6 Application packageName \u83b7\u53d6\u5305\u540d appName \u83b7\u53d6 App \u540d\u5b57 appIcon \u83b7\u53d6 App \u56fe\u6807 appVersionName \u83b7\u53d6 App \u7248\u672c\u53f7 appVersionCode \u83b7\u53d6 App \u7248\u672c\u7801 isAppDebug \u5224\u65ad App \u662f\u5426\u662f Debug \u7248\u672c isAppDarkMode \u5224\u65ad App \u662f\u5426\u662f\u591c\u95f4\u6a21\u5f0f launchAppDetailsSettings \u542f\u52a8 App \u8be6\u60c5\u8bbe\u7f6e relaunchApp([killProcess]) \u91cd\u542f App AppForegroundObserver \u00b6 \u7528\u6cd5 \u4f5c\u7528 AppForegroundObserver {...} App \u524d\u540e\u53f0\u5207\u6362\u76d1\u542c Bluetooth.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 isBluetoothEnabled \u5224\u65ad\u84dd\u7259\u662f\u5426\u5f00\u542f BluetoothStateLiveData {...} \u76d1\u542c\u84dd\u7259\u8bbe\u5907\u7684\u8fde\u63a5\u72b6\u6001 Bundle.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 by Activity.bundle([default], [key]) \u901a\u8fc7 Intent \u7684 extras \u83b7\u53d6\u542b\u9ed8\u8ba4\u503c\u7684\u53c2\u6570 by Fragment.bundle([default], [key]) \u901a\u8fc7 Fragment \u7684 argments \u83b7\u53d6\u542b\u9ed8\u8ba4\u503c\u7684\u53c2\u6570 Clipboard.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 CharSequence/Uri/Intent.copyToClipboard([label]) \u590d\u5236\u5230\u526a\u8d34\u677f getTextFromClipboard() \u83b7\u53d6\u526a\u8d34\u677f\u7684\u6587\u672c clearClipboard() \u6e05\u7406\u526a\u8d34\u677f doOnClipboardChanged(listener) \u76d1\u542c\u526a\u8d34\u677f\u7684\u53d8\u5316 ClipboardManager.OnPrimaryClipChangedListener.cancel() \u79fb\u9664\u526a\u8d34\u677f\u76d1\u542c\u5668 Crash.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 saveCrashLogLocally([dirPath]) \u4fdd\u5b58\u5d29\u6e83\u65e5\u5fd7\u5230\u672c\u5730 handleUncaughtException {...} \u5904\u7406\u672a\u6355\u83b7\u7684\u5f02\u5e38 handleMainThreadException {...} \u5904\u7406\u4e3b\u7ebf\u7a0b\u7684\u5f02\u5e38 DateTime.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 Instant.format(pattern, [zone], [locale]) Instant \u8f6c\u5b57\u7b26\u4e32 LocalDateTime.format(pattern, [locale]) LocalDateTime \u8f6c\u5b57\u7b26\u4e32 LocalDate.format(pattern, [locale]) LocalDate \u8f6c\u5b57\u7b26\u4e32 LocalDateTime.toInstant(pattern, [zone]) LocalDateTime \u8f6c Instant Instant.toLocalDateTime(pattern, [zone]) Instant \u8f6c LocalDateTime LocalDateTime.toEpochSecond(pattern, [zone]) LocalDateTime \u8f6c\u79d2\u6570 LocalDateTime.toEpochMilli(pattern, [zone]) LocalDateTime \u8f6c\u6beb\u79d2 String.toInstant(pattern, [zone]) \u5b57\u7b26\u4e32\u8f6c Instant String.toLocalDateTime(pattern) \u5b57\u7b26\u4e32\u8f6c LocalDateTime String.toLocalDate(pattern) \u5b57\u7b26\u4e32\u8f6c LocalDate String.toEpochMilliseconds(pattern) \u5b57\u7b26\u4e32\u8f6c\u6beb\u79d2 String.toEpochSeconds(pattern) \u5b57\u7b26\u4e32\u8f6c\u79d2\u6570 LocalDateTime/LocalDate.isToday([zone]) \u5224\u65ad\u662f\u4e0d\u662f\u4eca\u5929 LocalDateTime/LocalDate.isYesterday([zone]) \u5224\u65ad\u662f\u4e0d\u662f\u6628\u5929 LocalDateTime/LocalDate.firstDayOfYear() \u4eca\u5e74\u7684\u7b2c\u4e00\u5929 LocalDateTime/LocalDate.lastDayOfYear() \u4eca\u5e74\u7684\u6700\u540e\u4e00\u5929 LocalDateTime/LocalDate.firstDayOfNextYear() \u540d\u5e74\u7684\u7b2c\u4e00\u5929 LocalDateTime/LocalDate.firstDayOfLastYear() \u53bb\u5e74\u7684\u7b2c\u4e00\u5929 LocalDateTime/LocalDate.firstDayOfMonth() \u8fd9\u4e2a\u6708\u7684\u7b2c\u4e00\u5929 LocalDateTime/LocalDate.lastDayOfMonth() \u8fd9\u4e2a\u6708\u7684\u6700\u540e\u4e00\u5929 LocalDateTime/LocalDate.firstDayOfNextMonth() \u4e0b\u4e2a\u6708\u7684\u7b2c\u4e00\u5929 LocalDateTime/LocalDate.firstDayOfLastMonth() \u4e0a\u4e2a\u6708\u7684\u7b2c\u4e00\u5929 LocalDateTime/LocalDate.firstInMonth(dayOfWeek) \u8fd9\u4e2a\u6708\u7684\u7b2c\u4e00\u4e2a\u5468\u51e0 LocalDateTime/LocalDate.lastInMonth(dayOfWeek) \u8fd9\u4e2a\u6708\u7684\u6700\u540e\u4e00\u4e2a\u5468\u51e0 LocalDateTime/LocalDate.dayOfWeekInMonth(ordinal, dayOfWeek) \u8fd9\u4e2a\u6708\u7684\u7b2c\u51e0\u4e2a\u5468\u51e0 LocalDateTime/LocalDate.next(dayOfWeek) \u4e0b\u4e00\u4e2a\u5468\u51e0\uff0c\u4e0d\u5305\u542b\u4eca\u5929 LocalDateTime/LocalDate.nextOrSame(dayOfWeek) \u4e0b\u4e00\u4e2a\u5468\u51e0\uff0c\u5305\u542b\u4eca\u5929 LocalDateTime/LocalDate.previous(dayOfWeek) \u4e0a\u4e00\u4e2a\u5468\u51e0\uff0c\u4e0d\u5305\u542b\u4eca\u5929 LocalDateTime/LocalDate.previousOrSame(dayOfWeek) \u4e0a\u4e00\u4e2a\u5468\u51e0\uff0c\u5305\u542b\u4eca\u5929 DeviceInfo.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 sdkVersionName \u83b7\u53d6\u8bbe\u5907\u7cfb\u7edf\u7248\u672c\u53f7 sdkVersionCode \u83b7\u53d6\u8bbe\u5907\u7cfb\u7edf\u7248\u672c\u7801 deviceManufacturer \u83b7\u53d6\u8bbe\u5907\u5382\u5546 deviceModel \u83b7\u53d6\u8bbe\u5907\u578b\u53f7 Dimensions.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 Int/Long/Float/Double.dp dp \u8f6c px Int/Long/Float/Double.sp sp \u8f6c px Int/Long/Float/Double.pxToDp() px \u8f6c dp Int/Long/Float/Double.pxToSp() px \u8f6c sp DownloadManager.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 download(url) {...} \u4f7f\u7528\u539f\u751f DownloadManager \u4e0b\u8f7d\u6587\u4ef6 Encode.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 ByteArray.base64Encode([flag]) Base64 \u7f16\u7801 ByteArray.base64EncodeToString([flag]) Base64 \u7f16\u7801 String.base64Decode([flag]) Base64 \u89e3\u7801 String.urlEncode(enc) Url \u7f16\u7801 String.urlDecode(enc) Url \u89e3\u7801 Encrypt.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 String/ByteArray.encrtpyMD5() MD5 \u52a0\u5bc6 String/ByteArray.encrtpySHA1() SHA1 \u52a0\u5bc6 String/ByteArray.encrtpySHA256() SHA256 \u52a0\u5bc6 String/ByteArray.encrtpySHA512() SHA512 \u52a0\u5bc6 String/ByteArray.encrtpyHmacSHA1(key) HMAC-SHA1 \u52a0\u5bc6 String/ByteArray.encrtpyHmacSHA256(key) HMAC-SHA256 \u52a0\u5bc6 String/ByteArray.encrtpyHmacSHA512(key) HMAC-SHA512 \u52a0\u5bc6 File.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 File.isExistOrCreateNewFile() \u5224\u65ad\u662f\u5426\u5b58\u5728\uff0c\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u65b0\u6587\u4ef6 File?.isExistOrCreateNewDir() \u5224\u65ad\u662f\u5426\u5b58\u5728\uff0c\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u65b0\u6587\u4ef6\u5939 File.createNewFileAfterDeleteExist() \u521b\u5efa\u65b0\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u5148\u5220\u9664 File.rename(name) \u91cd\u547d\u540d\u6587\u4ef6 File.mimeType \u83b7\u53d6\u6587\u4ef6\u7684 MIME \u7c7b\u578b fileSeparator \u83b7\u53d6\u6587\u4ef6\u5206\u9694\u7b26 File.print {...} \u6253\u5370\u5185\u5bb9\u5230\u6587\u4ef6 File.checkMD5(md5) \u68c0\u6d4b MD5 \u7684\u503c File.checkSHA1(sha1) \u68c0\u6d4b SHA1 \u7684\u503c File.checkSHA256(sha256) \u68c0\u6d4b SHA256 \u7684\u503c File.checkSHA512(sha512) \u68c0\u6d4b SHA512 \u7684\u503c File.checkHmacSHA1(key, hmacSHA1) \u68c0\u6d4b HMAC-SHA1 \u7684\u503c File.checkHmacSHA256(key, hmacSHA256) \u68c0\u6d4b HMAC-SHA256 \u7684\u503c File.checkHmacSHA512(key, hmacSHA512) \u68c0\u6d4b HMAC-SHA512 \u7684\u503c File.calculateMD5() \u8ba1\u7b97 MD5 \u7684\u503c File.calculateSHA1() \u8ba1\u7b97 SHA1 \u7684\u503c File.calculateSHA256() \u8ba1\u7b97 SHA256 \u7684\u503c File.calculateSHA512() \u8ba1\u7b97 SHA512 \u7684\u503c File.calculateHmacSHA1(key) \u8ba1\u7b97 HMAC-SHA1 \u7684\u503c File.calculateHmacSHA256(key) \u8ba1\u7b97 HMAC-SHA256 \u7684\u503c File.calculateHmacSHA512(key) \u8ba1\u7b97 HMAC-SHA512 \u7684\u503c Flow.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 Flow<T>.launchAndCollectIn(owner, [minActiveState]) {...} \u542f\u52a8 lifecycleScope \u5e76\u6536\u96c6\u6570\u636e Fragment.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 Fragment.withArguments(\"id\" to 5) \u521b\u5efa Fragment \u65f6\u4f34\u968f\u53c2\u6570 Fragment.pressBackTwiceToExitApp(toastText, [delayMillis]) \u53cc\u51fb\u8fd4\u56de\u9000\u51fa App Fragment.pressBackTwiceToExitApp([delayMillis]) {...} \u53cc\u51fb\u8fd4\u56de\u9000\u51fa App\uff0c\u81ea\u5b9a\u4e49 Toast Fragment.pressBackToNotExit() \u70b9\u51fb\u8fd4\u56de\u4e0d\u9000\u51fa App Fragment.doOnBackPressed {...} \u76d1\u542c\u624b\u673a\u7684\u8fd4\u56de\u4e8b\u4ef6 Intents.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 intentOf<SomeOtherActivity>(\"id\" to 5) \u521b\u5efa Intent by Activity.intentExtras(key) \u901a\u8fc7 Intent \u7684 extras \u83b7\u53d6\u53ef\u7a7a\u7684\u53c2\u6570 by Activity.intentExtras(key, default) \u901a\u8fc7 Intent \u7684 extras \u83b7\u53d6\u542b\u9ed8\u8ba4\u503c\u7684\u53c2\u6570 by Activity.safeIntentExtras(key) \u901a\u8fc7 Intent \u7684 extras \u83b7\u53d6\u4eba\u4e3a\u4fdd\u8bc1\u975e\u7a7a\u7684\u53c2\u6570 dial(phoneNumber) \u62e8\u53f7 makeCall(phoneNumber) \u6253\u7535\u8bdd sendSMS(phoneNumber, content) \u53d1\u77ed\u4fe1 browse(url, [newTask]) \u6253\u5f00\u7f51\u9875 email(email, [subject], [text]) \u53d1\u9001\u90ae\u4ef6 installAPK(uri) \u5b89\u88c5 APK Intent.clearTask() \u6dfb\u52a0 FLAG_ACTIVITY_CLEAR_TASK \u7684 flag Intent.clearTop() \u6dfb\u52a0 FLAG_ACTIVITY_CLEAR_TOP \u7684 flag Intent.newDocument() \u6dfb\u52a0 FLAG_ACTIVITY_NEW_DOCUMENT \u7684 flag Intent.excludeFromRecents() \u6dfb\u52a0 FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS \u7684 flag Intent.multipleTask() \u6dfb\u52a0 FLAG_ACTIVITY_MULTIPLE_TASK \u7684 flag Intent.newTask() \u6dfb\u52a0 FLAG_ACTIVITY_NEW_TASK \u7684 flag Intent.noAnimation() \u6dfb\u52a0 FLAG_ACTIVITY_NO_ANIMATION \u7684 flag Intent.noHistory() \u6dfb\u52a0 FLAG_ACTIVITY_NO_HISTORY \u7684 flag Intent.singleTop() \u6dfb\u52a0 FLAG_ACTIVITY_SINGLE_TOP \u7684 flag Intent.grantReadPermission() \u6dfb\u52a0 FLAG_GRANT_READ_URI_PERMISSION \u7684 flag Keyboard.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 View.showKeyboard() \u663e\u793a\u952e\u76d8 View.hideKeyboard() \u9690\u85cf\u952e\u76d8 View.toggleKeyboard() \u5207\u6362\u952e\u76d8\u663e\u793a\u72b6\u6001 View.isKeyboardVisible \u5224\u65ad\u952e\u76d8\u662f\u5426\u53ef\u89c1 View.keyboardHeight \u83b7\u53d6\u952e\u76d8\u9ad8\u5ea6 Lifecycle.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 Application.doOnActivityLifecycle(...) \u76d1\u542c\u6240\u6709 Activity \u7684\u751f\u547d\u5468\u671f LifecycleOwner.doOnLifecycle {...} \u76d1\u542c\u5f53\u524d Activity \u6216 Fragment \u751f\u547d\u5468\u671f Fragment.doOnViewLifecycle {...} \u76d1\u542c\u5f53\u524d Fragment \u89c6\u56fe\u7684\u751f\u547d\u5468\u671f MetaData.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 applicationMetaDataOf(name) \u83b7\u53d6 application \u7684 meta-data \u503c activityMetaDataOf<T>(name) \u83b7\u53d6 activity \u7684 meta-data \u503c serviceMetaDataOf<T>(name) \u83b7\u53d6 service \u7684 meta-data \u503c providerMetaDataOf<T>(name) \u83b7\u53d6 provider \u7684 meta-data \u503c receiverMetaDataOf<T>(name) \u83b7\u53d6 receiver \u7684 meta-data \u503c Network.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 isNetworkAvailable \u5224\u65ad\u7f51\u7edc\u662f\u5426\u53ef\u7528 isWifiConnected \u5224\u65ad\u7f51\u7edc\u662f\u5426\u662f Wifi isMobileData \u5224\u65ad\u7f51\u7edc\u662f\u5426\u662f\u79fb\u52a8\u6570\u636e isWifiEnabled \u5224\u65ad Wifi \u662f\u5426\u6253\u5f00 ScanResult.is24GHz \u5224\u65ad\u626b\u63cf\u7ed3\u679c\u662f\u5426\u662f 2.4GHz ScanResult.is5GHz \u5224\u65ad\u626b\u63cf\u7ed3\u679c\u662f\u5426\u662f 5GHz NetworkAvailableLiveData() \u76d1\u542c\u7f51\u7edc\u72b6\u6001\u6539\u53d8 WifiListLiveData() \u76d1\u542c\u626b\u63cf\u7684 Wifi \u5217\u8868 Paths.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 cacheDirPath \u83b7\u53d6\u5e94\u7528\u7f13\u5b58\u8def\u5f84\uff08\u4f18\u5148\u5916\u5b58\uff09 externalCacheDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u7f13\u5b58\u8def\u5f84 externalFilesDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u6587\u4ef6\u8def\u5f84 externalPicturesDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u56fe\u7247\u8def\u5f84 externalMoviesDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u89c6\u9891\u8def\u5f84 externalDownloadsDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u4e0b\u8f7d\u8def\u5f84 externalDocumentsDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u6587\u6863\u8def\u5f84 externalMusicDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u97f3\u4e50\u8def\u5f84 externalPodcastsDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u64ad\u5ba2\u8def\u5f84 externalRingtonesDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u94c3\u58f0\u8def\u5f84 externalAlarmsDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u95f9\u94c3\u8def\u5f84 externalNotificationsDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u901a\u77e5\u8def\u5f84 internalCacheDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u7f13\u5b58\u8def\u5f84 internalFileDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u6587\u4ef6\u8def\u5f84 internalPicturesDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u56fe\u7247\u8def\u5f84 internalMoviesDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u89c6\u9891\u8def\u5f84 internalDownloadsDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u4e0b\u8f7d\u8def\u5f84 internalDocumentsDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u6587\u6863\u8def\u5f84 internalMusicDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u97f3\u4e50\u8def\u5f84 internalPodcastsDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u64ad\u5ba2\u8def\u5f84 internalRingtonesDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u94c3\u58f0\u8def\u5f84 internalNotificationsDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u901a\u77e5\u8def\u5f84 isExternalStorageWritable \u5224\u65ad\u5916\u5b58\u662f\u5426\u53ef\u8bfb\u5199 isExternalStorageReadable \u5224\u65ad\u5916\u5b58\u662f\u5426\u53ef\u8bfb isExternalStorageRemovable \u5224\u65ad\u5916\u5b58\u662f\u5426\u53ef\u79fb\u9664 Resource.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 View.getString(id) \u6839\u636e id \u83b7\u53d6\u5b57\u7b26\u4e32 Context/Fragment/View.getDimension(id) \u6839\u636e id \u83b7\u53d6\u6570\u5b57 Context/Fragment/View.getCompatColor(id) \u6839\u636e id \u83b7\u53d6\u989c\u8272 Context/Fragment/View.getCompatDrawable(id) \u6839\u636e id \u83b7\u53d6 Drawable Context/Fragment/View.getCompatFont(id) \u6839\u636e id \u83b7\u53d6\u5b57\u4f53 parseColor(colorString) \u6839\u636e\u5b57\u7b26\u4e32\u83b7\u53d6\u989c\u8272 Rom.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 isXiaomiRom \u5224\u65ad\u662f\u5426\u662f\u5c0f\u7c73 Rom isHuaweiRom \u5224\u65ad\u662f\u5426\u662f\u534e\u4e3a Rom isOppoRom \u5224\u65ad\u662f\u5426\u662f OPPO Rom isVivoRom \u5224\u65ad\u662f\u5426\u662f vivo Rom isOnePlusRom \u5224\u65ad\u662f\u5426\u662f\u4e00\u52a0 Rom isSmartisanRom \u5224\u65ad\u662f\u5426\u662f\u9524\u5b50 Rom isMeiZuRom \u5224\u65ad\u662f\u5426\u662f\u9b45\u65cf Rom isSamsungRom \u5224\u65ad\u662f\u5426\u662f\u4e09\u661f Rom isGoogleRom \u5224\u65ad\u662f\u5426\u662f\u8c37\u6b4c Rom isSonyRom \u5224\u65ad\u662f\u5426\u662f\u7d22\u5c3c Rom isRomOf(names) \u5224\u65ad\u662f\u5426\u662f\u67d0\u4e2a Rom isHarmonyOS \u5224\u65ad\u662f\u5426\u662f\u9e3f\u8499\u7cfb\u7edf Screen.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 screenWidth \u83b7\u53d6\u5c4f\u5e55\u5bbd\u5ea6 screenHeight \u83b7\u53d6\u5c4f\u5e55\u9ad8\u5ea6 Activity/Fragment.isFullScreen \u5224\u65ad\u6216\u8bbe\u7f6e\u662f\u5426\u5168\u5c4f Activity/Fragment.isLandscape \u5224\u65ad\u6216\u8bbe\u7f6e\u662f\u5426\u6a2a\u5c4f Activity/Fragment.isPortrait \u5224\u65ad\u6216\u8bbe\u7f6e\u662f\u5426\u7ad6\u5c4f Shell.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 executeCmd(command) \u6267\u884c\u547d\u4ee4 StatusBar.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 Activity.immersive([view], [darkMode]) \u8bbe\u7f6e\u5168\u900f\u660e\u72b6\u6001\u680f\u6216\u8005\u72b6\u6001\u680f\u989c\u8272 Activity.immersiveRes([color], [darkMode]) \u548c\u4e0a\u9762\u51fd\u6570\u533a\u522b\u662f\u4f7f\u7528\u989c\u8272\u8d44\u6e90\u503c Activity.darkMode([darkMode]) \u8bbe\u7f6e\u72b6\u6001\u680f\u6587\u5b57\u989c\u8272\u4e3a\u9ed1\u8272 View.statusPadding() \u4e3a View \u7684 PaddingTop \u589e\u52a0\u4e00\u4e2a\u72b6\u6001\u680f\u9ad8\u5ea6 Activity.setNavigationBar \u663e\u793a\u5bfc\u822a\u680f (\u7cfb\u7edf\u5f00\u542f\u53ef\u4ee5\u9690\u85cf, \u7cfb\u7edf\u672a\u5f00\u542f\u4e0d\u80fd\u5f00\u542f) Activity.setFullscreen \u663e\u793a\u5168\u5c4f Activity?.isNavigationBar \u662f\u5426\u5b58\u5728\u5bfc\u822a\u680f Context?.navigationBarHeight \u5bfc\u822a\u680f\u9ad8\u5ea6 Context?.statusBarHeight \u72b6\u6001\u680f\u9ad8\u5ea6 String.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 randomUUIDString \u83b7\u53d6\u968f\u673a UUID \u5b57\u7b26\u4e32 Long.toFileSizeString() \u6570\u5b57\u8f6c\u6587\u4ef6\u5927\u5c0f\u5b57\u7b26\u4e32 Long.toShortFileSizeString() \u6570\u5b57\u8f6c\u7cbe\u5ea6\u4f4d\u6570\u8f83\u5c11\u7684\u6587\u4ef6\u5927\u5c0f\u5b57\u7b26\u4e32 String.limitLength(length: Int) \u9650\u5236\u5b57\u7b26\u957f\u5ea6 String.isPhone() \u5224\u65ad\u662f\u5426\u662f\u624b\u673a\u53f7 String.isDomainName() \u5224\u65ad\u662f\u5426\u662f\u57df\u540d String.isEmail() \u5224\u65ad\u662f\u5426\u662f\u90ae\u7bb1 String.isIP() \u5224\u65ad\u662f\u5426\u662f IP \u5730\u5740 String.isWebUrl() \u5224\u65ad\u662f\u5426\u662f\u7f51\u5740 String.isIDCard15() \u5224\u65ad\u662f\u5426\u662f 15 \u4f4d\u8eab\u4efd\u8bc1\u53f7\u7801 String.isIDCard18() \u5224\u65ad\u662f\u5426\u662f 18 \u4f4d\u8eab\u4efd\u8bc1\u53f7\u7801 String.isJson() \u5224\u65ad\u662f\u5426\u662f Json \u5b57\u7b26\u4e32 Float/Double.toNumberString(...) \u5c0f\u6570\u8f6c\u4e3a\u5b57\u7b26\u4e32\uff0c\u9ed8\u8ba4\u4fdd\u7559\u5c0f\u6570\u70b9\u540e\u4e24\u4f4d Threads.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 isMainThread \u662f\u5426\u5728\u4e3b\u7ebf\u7a0b mainThread([delayMillis]) {...} \u5728\u4e3b\u7ebf\u7a0b\u8fd0\u884c Toast.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 Context/Fragment.toast(message) \u5410\u53f8 Context/Fragment.longToast(message) \u957f\u5410\u53f8 View.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 View/List<View>.doOnClick {...} \u8bbe\u7f6e\u70b9\u51fb\u4e8b\u4ef6 View/List<View>.doOnLongClick {...} \u8bbe\u7f6e\u957f\u6309\u4e8b\u4ef6 View/List<View>.doOnDebouncingClick([interval]) {...} \u8bbe\u7f6e\u70b9\u51fb\u4e8b\u4ef6 View/List<View>.doOnDebouncingLongClick([interval]) {...} \u8bbe\u7f6e\u957f\u6309\u4e8b\u4ef6 View.expandClickArea(...) \u589e\u5927\u70b9\u51fb\u533a\u57df View.roundCorners \u8bbe\u7f6e\u5706\u89d2 View?.isTouchedAt(x, y) \u5224\u65ad\u63a7\u4ef6\u662f\u5426\u5728\u89e6\u6478\u4f4d\u7f6e\u4e0a View.findTouchedChild(view, x, y) \u5bfb\u627e\u89e6\u6478\u4f4d\u7f6e\u4e0a\u7684\u5b50\u63a7\u4ef6 View.locationOnScreen \u83b7\u53d6\u63a7\u4ef6\u5728\u5c4f\u5e55\u7684\u4f4d\u7f6e View.withStyledAttributes(set, attrs, [defStyleAttr], [defStyleRes]) {...} \u83b7\u53d6\u81ea\u5b9a\u4e49\u5c5e\u6027 View.rootWindowInsetsCompat \u83b7\u53d6\u6839\u89c6\u56fe\u7684 WinowInsetsCompat View.windowInsetsControllerCompat \u83b7\u53d6 WindowInsetsControllerCompat ViewModel.kt \u00b6 \u7528\u6cd5 \u4f5c\u7528 by ComponentActivity/Fragment.applicationViewModels() \u83b7\u53d6 Application \u7ea7\u522b\u7684 ViewModel \u5b9e\u4f8b\uff0c\u652f\u6301 Hilt Api \u00b6 \u5177\u4f53\u67e5\u770b","title":"utils\u6a21\u5757"},{"location":"utils-helper/#utils-helper","text":"\u662f\u4e00\u4e2a\u7b80\u5316 Android \u5f00\u53d1\u7684 Kotlin \u5de5\u5177\u5e93\uff0c\u53ef\u4ee5\u4f7f\u4ee3\u7801\u66f4\u52a0\u7b80\u6d01\u6613\u8bfb\u3002 \u76ee\u524d\u6709\u8d85\u8fc7 500 \u4e2a\u5e38\u7528\u65b9\u6cd5\u6216\u5c5e\u6027\uff0c\u80fd\u6709\u6548\u63d0\u9ad8\u5f00\u53d1\u6548\u7387 \u3002","title":"Utils-helper"},{"location":"utils-helper/#gradle","text":"\u5728\u6839\u76ee\u5f55\u7684 build.gradle \u6dfb\u52a0\uff1a allprojects { repositories { // ... maven { url 'https://www.jitpack.io' } } } \u6dfb\u52a0\u4f9d\u8d56\uff1a api \"com.github.GuoYangGit.AndroidUtils:utils-helper:xxx\" \u4e0b\u9762\u7528\u6cd5\u4e2d\u542b\u6709\u65b9\u62ec\u53f7 [] \u7684\u53c2\u6570\u662f\u53ef\u9009\u7684\u3002","title":"Gradle"},{"location":"utils-helper/#activitykt","text":"\u65b9\u6cd5 \u8bf4\u660e [Activity].startActivity<T>(\"id\" to 5) \u542f\u52a8 Activity Activity.finishWithResult(\"id\" to 5, \"name\" to name) \u5173\u95ed Activity \u5e76\u8fd4\u56de\u7ed3\u679c activityList \u83b7\u53d6 Activity \u6808\u94fe\u8868 topActivity \u83b7\u53d6\u6808\u9876 Activity isActivityExistsInStack<SomeOtherActivity> \u5224\u65ad Activity \u662f\u5426\u5b58\u5728\u6808\u4e2d finishActivity<SomeOtherActivity> \u7ed3\u675f\u67d0\u4e2a Activity finishToActivity<SomeOtherActivity> \u7ed3\u675f\u5230\u67d0\u4e2a Activity finishAllActivities \u7ed3\u675f\u6240\u6709 Activity finishAllActivitiesExcept<T> \u7ed3\u675f\u9664\u67d0\u4e2a Activity \u4e4b\u5916\u7684\u6240\u6709 Activity finishAllActivitiesExceptNewest \u7ed3\u675f\u9664\u6700\u65b0 Activity \u4e4b\u5916\u7684\u6240\u6709 Activity ComponentActivity.pressBackTwiceToExitApp(toastText, [delayMillis]) \u53cc\u51fb\u8fd4\u56de\u9000\u51fa App ComponentActivity.pressBackTwiceToExitApp([delayMillis]) {...} \u53cc\u51fb\u8fd4\u56de\u9000\u51fa App\uff0c\u81ea\u5b9a\u4e49 Toast ComponentActivity.pressBackToNotExit() \u70b9\u51fb\u8fd4\u56de\u4e0d\u9000\u51fa App ComponentActivity.doOnBackPressed {...} \u76d1\u542c\u624b\u673a\u7684\u8fd4\u56de\u4e8b\u4ef6 Context.isPermissionGranted(permission) \u5224\u65ad\u662f\u5426\u6709\u6743\u9650","title":"Activity.kt"},{"location":"utils-helper/#applicationkt","text":"\u7528\u6cd5 \u4f5c\u7528 application \u83b7\u53d6 Application packageName \u83b7\u53d6\u5305\u540d appName \u83b7\u53d6 App \u540d\u5b57 appIcon \u83b7\u53d6 App \u56fe\u6807 appVersionName \u83b7\u53d6 App \u7248\u672c\u53f7 appVersionCode \u83b7\u53d6 App \u7248\u672c\u7801 isAppDebug \u5224\u65ad App \u662f\u5426\u662f Debug \u7248\u672c isAppDarkMode \u5224\u65ad App \u662f\u5426\u662f\u591c\u95f4\u6a21\u5f0f launchAppDetailsSettings \u542f\u52a8 App \u8be6\u60c5\u8bbe\u7f6e relaunchApp([killProcess]) \u91cd\u542f App","title":"Application.kt"},{"location":"utils-helper/#appforegroundobserver","text":"\u7528\u6cd5 \u4f5c\u7528 AppForegroundObserver {...} App \u524d\u540e\u53f0\u5207\u6362\u76d1\u542c","title":"AppForegroundObserver"},{"location":"utils-helper/#bluetoothkt","text":"\u7528\u6cd5 \u4f5c\u7528 isBluetoothEnabled \u5224\u65ad\u84dd\u7259\u662f\u5426\u5f00\u542f BluetoothStateLiveData {...} \u76d1\u542c\u84dd\u7259\u8bbe\u5907\u7684\u8fde\u63a5\u72b6\u6001","title":"Bluetooth.kt"},{"location":"utils-helper/#bundlekt","text":"\u7528\u6cd5 \u4f5c\u7528 by Activity.bundle([default], [key]) \u901a\u8fc7 Intent \u7684 extras \u83b7\u53d6\u542b\u9ed8\u8ba4\u503c\u7684\u53c2\u6570 by Fragment.bundle([default], [key]) \u901a\u8fc7 Fragment \u7684 argments \u83b7\u53d6\u542b\u9ed8\u8ba4\u503c\u7684\u53c2\u6570","title":"Bundle.kt"},{"location":"utils-helper/#clipboardkt","text":"\u7528\u6cd5 \u4f5c\u7528 CharSequence/Uri/Intent.copyToClipboard([label]) \u590d\u5236\u5230\u526a\u8d34\u677f getTextFromClipboard() \u83b7\u53d6\u526a\u8d34\u677f\u7684\u6587\u672c clearClipboard() \u6e05\u7406\u526a\u8d34\u677f doOnClipboardChanged(listener) \u76d1\u542c\u526a\u8d34\u677f\u7684\u53d8\u5316 ClipboardManager.OnPrimaryClipChangedListener.cancel() \u79fb\u9664\u526a\u8d34\u677f\u76d1\u542c\u5668","title":"Clipboard.kt"},{"location":"utils-helper/#crashkt","text":"\u7528\u6cd5 \u4f5c\u7528 saveCrashLogLocally([dirPath]) \u4fdd\u5b58\u5d29\u6e83\u65e5\u5fd7\u5230\u672c\u5730 handleUncaughtException {...} \u5904\u7406\u672a\u6355\u83b7\u7684\u5f02\u5e38 handleMainThreadException {...} \u5904\u7406\u4e3b\u7ebf\u7a0b\u7684\u5f02\u5e38","title":"Crash.kt"},{"location":"utils-helper/#datetimekt","text":"\u7528\u6cd5 \u4f5c\u7528 Instant.format(pattern, [zone], [locale]) Instant \u8f6c\u5b57\u7b26\u4e32 LocalDateTime.format(pattern, [locale]) LocalDateTime \u8f6c\u5b57\u7b26\u4e32 LocalDate.format(pattern, [locale]) LocalDate \u8f6c\u5b57\u7b26\u4e32 LocalDateTime.toInstant(pattern, [zone]) LocalDateTime \u8f6c Instant Instant.toLocalDateTime(pattern, [zone]) Instant \u8f6c LocalDateTime LocalDateTime.toEpochSecond(pattern, [zone]) LocalDateTime \u8f6c\u79d2\u6570 LocalDateTime.toEpochMilli(pattern, [zone]) LocalDateTime \u8f6c\u6beb\u79d2 String.toInstant(pattern, [zone]) \u5b57\u7b26\u4e32\u8f6c Instant String.toLocalDateTime(pattern) \u5b57\u7b26\u4e32\u8f6c LocalDateTime String.toLocalDate(pattern) \u5b57\u7b26\u4e32\u8f6c LocalDate String.toEpochMilliseconds(pattern) \u5b57\u7b26\u4e32\u8f6c\u6beb\u79d2 String.toEpochSeconds(pattern) \u5b57\u7b26\u4e32\u8f6c\u79d2\u6570 LocalDateTime/LocalDate.isToday([zone]) \u5224\u65ad\u662f\u4e0d\u662f\u4eca\u5929 LocalDateTime/LocalDate.isYesterday([zone]) \u5224\u65ad\u662f\u4e0d\u662f\u6628\u5929 LocalDateTime/LocalDate.firstDayOfYear() \u4eca\u5e74\u7684\u7b2c\u4e00\u5929 LocalDateTime/LocalDate.lastDayOfYear() \u4eca\u5e74\u7684\u6700\u540e\u4e00\u5929 LocalDateTime/LocalDate.firstDayOfNextYear() \u540d\u5e74\u7684\u7b2c\u4e00\u5929 LocalDateTime/LocalDate.firstDayOfLastYear() \u53bb\u5e74\u7684\u7b2c\u4e00\u5929 LocalDateTime/LocalDate.firstDayOfMonth() \u8fd9\u4e2a\u6708\u7684\u7b2c\u4e00\u5929 LocalDateTime/LocalDate.lastDayOfMonth() \u8fd9\u4e2a\u6708\u7684\u6700\u540e\u4e00\u5929 LocalDateTime/LocalDate.firstDayOfNextMonth() \u4e0b\u4e2a\u6708\u7684\u7b2c\u4e00\u5929 LocalDateTime/LocalDate.firstDayOfLastMonth() \u4e0a\u4e2a\u6708\u7684\u7b2c\u4e00\u5929 LocalDateTime/LocalDate.firstInMonth(dayOfWeek) \u8fd9\u4e2a\u6708\u7684\u7b2c\u4e00\u4e2a\u5468\u51e0 LocalDateTime/LocalDate.lastInMonth(dayOfWeek) \u8fd9\u4e2a\u6708\u7684\u6700\u540e\u4e00\u4e2a\u5468\u51e0 LocalDateTime/LocalDate.dayOfWeekInMonth(ordinal, dayOfWeek) \u8fd9\u4e2a\u6708\u7684\u7b2c\u51e0\u4e2a\u5468\u51e0 LocalDateTime/LocalDate.next(dayOfWeek) \u4e0b\u4e00\u4e2a\u5468\u51e0\uff0c\u4e0d\u5305\u542b\u4eca\u5929 LocalDateTime/LocalDate.nextOrSame(dayOfWeek) \u4e0b\u4e00\u4e2a\u5468\u51e0\uff0c\u5305\u542b\u4eca\u5929 LocalDateTime/LocalDate.previous(dayOfWeek) \u4e0a\u4e00\u4e2a\u5468\u51e0\uff0c\u4e0d\u5305\u542b\u4eca\u5929 LocalDateTime/LocalDate.previousOrSame(dayOfWeek) \u4e0a\u4e00\u4e2a\u5468\u51e0\uff0c\u5305\u542b\u4eca\u5929","title":"DateTime.kt"},{"location":"utils-helper/#deviceinfokt","text":"\u7528\u6cd5 \u4f5c\u7528 sdkVersionName \u83b7\u53d6\u8bbe\u5907\u7cfb\u7edf\u7248\u672c\u53f7 sdkVersionCode \u83b7\u53d6\u8bbe\u5907\u7cfb\u7edf\u7248\u672c\u7801 deviceManufacturer \u83b7\u53d6\u8bbe\u5907\u5382\u5546 deviceModel \u83b7\u53d6\u8bbe\u5907\u578b\u53f7","title":"DeviceInfo.kt"},{"location":"utils-helper/#dimensionskt","text":"\u7528\u6cd5 \u4f5c\u7528 Int/Long/Float/Double.dp dp \u8f6c px Int/Long/Float/Double.sp sp \u8f6c px Int/Long/Float/Double.pxToDp() px \u8f6c dp Int/Long/Float/Double.pxToSp() px \u8f6c sp","title":"Dimensions.kt"},{"location":"utils-helper/#downloadmanagerkt","text":"\u7528\u6cd5 \u4f5c\u7528 download(url) {...} \u4f7f\u7528\u539f\u751f DownloadManager \u4e0b\u8f7d\u6587\u4ef6","title":"DownloadManager.kt"},{"location":"utils-helper/#encodekt","text":"\u7528\u6cd5 \u4f5c\u7528 ByteArray.base64Encode([flag]) Base64 \u7f16\u7801 ByteArray.base64EncodeToString([flag]) Base64 \u7f16\u7801 String.base64Decode([flag]) Base64 \u89e3\u7801 String.urlEncode(enc) Url \u7f16\u7801 String.urlDecode(enc) Url \u89e3\u7801","title":"Encode.kt"},{"location":"utils-helper/#encryptkt","text":"\u7528\u6cd5 \u4f5c\u7528 String/ByteArray.encrtpyMD5() MD5 \u52a0\u5bc6 String/ByteArray.encrtpySHA1() SHA1 \u52a0\u5bc6 String/ByteArray.encrtpySHA256() SHA256 \u52a0\u5bc6 String/ByteArray.encrtpySHA512() SHA512 \u52a0\u5bc6 String/ByteArray.encrtpyHmacSHA1(key) HMAC-SHA1 \u52a0\u5bc6 String/ByteArray.encrtpyHmacSHA256(key) HMAC-SHA256 \u52a0\u5bc6 String/ByteArray.encrtpyHmacSHA512(key) HMAC-SHA512 \u52a0\u5bc6","title":"Encrypt.kt"},{"location":"utils-helper/#filekt","text":"\u7528\u6cd5 \u4f5c\u7528 File.isExistOrCreateNewFile() \u5224\u65ad\u662f\u5426\u5b58\u5728\uff0c\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u65b0\u6587\u4ef6 File?.isExistOrCreateNewDir() \u5224\u65ad\u662f\u5426\u5b58\u5728\uff0c\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u65b0\u6587\u4ef6\u5939 File.createNewFileAfterDeleteExist() \u521b\u5efa\u65b0\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u5148\u5220\u9664 File.rename(name) \u91cd\u547d\u540d\u6587\u4ef6 File.mimeType \u83b7\u53d6\u6587\u4ef6\u7684 MIME \u7c7b\u578b fileSeparator \u83b7\u53d6\u6587\u4ef6\u5206\u9694\u7b26 File.print {...} \u6253\u5370\u5185\u5bb9\u5230\u6587\u4ef6 File.checkMD5(md5) \u68c0\u6d4b MD5 \u7684\u503c File.checkSHA1(sha1) \u68c0\u6d4b SHA1 \u7684\u503c File.checkSHA256(sha256) \u68c0\u6d4b SHA256 \u7684\u503c File.checkSHA512(sha512) \u68c0\u6d4b SHA512 \u7684\u503c File.checkHmacSHA1(key, hmacSHA1) \u68c0\u6d4b HMAC-SHA1 \u7684\u503c File.checkHmacSHA256(key, hmacSHA256) \u68c0\u6d4b HMAC-SHA256 \u7684\u503c File.checkHmacSHA512(key, hmacSHA512) \u68c0\u6d4b HMAC-SHA512 \u7684\u503c File.calculateMD5() \u8ba1\u7b97 MD5 \u7684\u503c File.calculateSHA1() \u8ba1\u7b97 SHA1 \u7684\u503c File.calculateSHA256() \u8ba1\u7b97 SHA256 \u7684\u503c File.calculateSHA512() \u8ba1\u7b97 SHA512 \u7684\u503c File.calculateHmacSHA1(key) \u8ba1\u7b97 HMAC-SHA1 \u7684\u503c File.calculateHmacSHA256(key) \u8ba1\u7b97 HMAC-SHA256 \u7684\u503c File.calculateHmacSHA512(key) \u8ba1\u7b97 HMAC-SHA512 \u7684\u503c","title":"File.kt"},{"location":"utils-helper/#flowkt","text":"\u7528\u6cd5 \u4f5c\u7528 Flow<T>.launchAndCollectIn(owner, [minActiveState]) {...} \u542f\u52a8 lifecycleScope \u5e76\u6536\u96c6\u6570\u636e","title":"Flow.kt"},{"location":"utils-helper/#fragmentkt","text":"\u7528\u6cd5 \u4f5c\u7528 Fragment.withArguments(\"id\" to 5) \u521b\u5efa Fragment \u65f6\u4f34\u968f\u53c2\u6570 Fragment.pressBackTwiceToExitApp(toastText, [delayMillis]) \u53cc\u51fb\u8fd4\u56de\u9000\u51fa App Fragment.pressBackTwiceToExitApp([delayMillis]) {...} \u53cc\u51fb\u8fd4\u56de\u9000\u51fa App\uff0c\u81ea\u5b9a\u4e49 Toast Fragment.pressBackToNotExit() \u70b9\u51fb\u8fd4\u56de\u4e0d\u9000\u51fa App Fragment.doOnBackPressed {...} \u76d1\u542c\u624b\u673a\u7684\u8fd4\u56de\u4e8b\u4ef6","title":"Fragment.kt"},{"location":"utils-helper/#intentskt","text":"\u7528\u6cd5 \u4f5c\u7528 intentOf<SomeOtherActivity>(\"id\" to 5) \u521b\u5efa Intent by Activity.intentExtras(key) \u901a\u8fc7 Intent \u7684 extras \u83b7\u53d6\u53ef\u7a7a\u7684\u53c2\u6570 by Activity.intentExtras(key, default) \u901a\u8fc7 Intent \u7684 extras \u83b7\u53d6\u542b\u9ed8\u8ba4\u503c\u7684\u53c2\u6570 by Activity.safeIntentExtras(key) \u901a\u8fc7 Intent \u7684 extras \u83b7\u53d6\u4eba\u4e3a\u4fdd\u8bc1\u975e\u7a7a\u7684\u53c2\u6570 dial(phoneNumber) \u62e8\u53f7 makeCall(phoneNumber) \u6253\u7535\u8bdd sendSMS(phoneNumber, content) \u53d1\u77ed\u4fe1 browse(url, [newTask]) \u6253\u5f00\u7f51\u9875 email(email, [subject], [text]) \u53d1\u9001\u90ae\u4ef6 installAPK(uri) \u5b89\u88c5 APK Intent.clearTask() \u6dfb\u52a0 FLAG_ACTIVITY_CLEAR_TASK \u7684 flag Intent.clearTop() \u6dfb\u52a0 FLAG_ACTIVITY_CLEAR_TOP \u7684 flag Intent.newDocument() \u6dfb\u52a0 FLAG_ACTIVITY_NEW_DOCUMENT \u7684 flag Intent.excludeFromRecents() \u6dfb\u52a0 FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS \u7684 flag Intent.multipleTask() \u6dfb\u52a0 FLAG_ACTIVITY_MULTIPLE_TASK \u7684 flag Intent.newTask() \u6dfb\u52a0 FLAG_ACTIVITY_NEW_TASK \u7684 flag Intent.noAnimation() \u6dfb\u52a0 FLAG_ACTIVITY_NO_ANIMATION \u7684 flag Intent.noHistory() \u6dfb\u52a0 FLAG_ACTIVITY_NO_HISTORY \u7684 flag Intent.singleTop() \u6dfb\u52a0 FLAG_ACTIVITY_SINGLE_TOP \u7684 flag Intent.grantReadPermission() \u6dfb\u52a0 FLAG_GRANT_READ_URI_PERMISSION \u7684 flag","title":"Intents.kt"},{"location":"utils-helper/#keyboardkt","text":"\u7528\u6cd5 \u4f5c\u7528 View.showKeyboard() \u663e\u793a\u952e\u76d8 View.hideKeyboard() \u9690\u85cf\u952e\u76d8 View.toggleKeyboard() \u5207\u6362\u952e\u76d8\u663e\u793a\u72b6\u6001 View.isKeyboardVisible \u5224\u65ad\u952e\u76d8\u662f\u5426\u53ef\u89c1 View.keyboardHeight \u83b7\u53d6\u952e\u76d8\u9ad8\u5ea6","title":"Keyboard.kt"},{"location":"utils-helper/#lifecyclekt","text":"\u7528\u6cd5 \u4f5c\u7528 Application.doOnActivityLifecycle(...) \u76d1\u542c\u6240\u6709 Activity \u7684\u751f\u547d\u5468\u671f LifecycleOwner.doOnLifecycle {...} \u76d1\u542c\u5f53\u524d Activity \u6216 Fragment \u751f\u547d\u5468\u671f Fragment.doOnViewLifecycle {...} \u76d1\u542c\u5f53\u524d Fragment \u89c6\u56fe\u7684\u751f\u547d\u5468\u671f","title":"Lifecycle.kt"},{"location":"utils-helper/#metadatakt","text":"\u7528\u6cd5 \u4f5c\u7528 applicationMetaDataOf(name) \u83b7\u53d6 application \u7684 meta-data \u503c activityMetaDataOf<T>(name) \u83b7\u53d6 activity \u7684 meta-data \u503c serviceMetaDataOf<T>(name) \u83b7\u53d6 service \u7684 meta-data \u503c providerMetaDataOf<T>(name) \u83b7\u53d6 provider \u7684 meta-data \u503c receiverMetaDataOf<T>(name) \u83b7\u53d6 receiver \u7684 meta-data \u503c","title":"MetaData.kt"},{"location":"utils-helper/#networkkt","text":"\u7528\u6cd5 \u4f5c\u7528 isNetworkAvailable \u5224\u65ad\u7f51\u7edc\u662f\u5426\u53ef\u7528 isWifiConnected \u5224\u65ad\u7f51\u7edc\u662f\u5426\u662f Wifi isMobileData \u5224\u65ad\u7f51\u7edc\u662f\u5426\u662f\u79fb\u52a8\u6570\u636e isWifiEnabled \u5224\u65ad Wifi \u662f\u5426\u6253\u5f00 ScanResult.is24GHz \u5224\u65ad\u626b\u63cf\u7ed3\u679c\u662f\u5426\u662f 2.4GHz ScanResult.is5GHz \u5224\u65ad\u626b\u63cf\u7ed3\u679c\u662f\u5426\u662f 5GHz NetworkAvailableLiveData() \u76d1\u542c\u7f51\u7edc\u72b6\u6001\u6539\u53d8 WifiListLiveData() \u76d1\u542c\u626b\u63cf\u7684 Wifi \u5217\u8868","title":"Network.kt"},{"location":"utils-helper/#pathskt","text":"\u7528\u6cd5 \u4f5c\u7528 cacheDirPath \u83b7\u53d6\u5e94\u7528\u7f13\u5b58\u8def\u5f84\uff08\u4f18\u5148\u5916\u5b58\uff09 externalCacheDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u7f13\u5b58\u8def\u5f84 externalFilesDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u6587\u4ef6\u8def\u5f84 externalPicturesDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u56fe\u7247\u8def\u5f84 externalMoviesDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u89c6\u9891\u8def\u5f84 externalDownloadsDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u4e0b\u8f7d\u8def\u5f84 externalDocumentsDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u6587\u6863\u8def\u5f84 externalMusicDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u97f3\u4e50\u8def\u5f84 externalPodcastsDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u64ad\u5ba2\u8def\u5f84 externalRingtonesDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u94c3\u58f0\u8def\u5f84 externalAlarmsDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u95f9\u94c3\u8def\u5f84 externalNotificationsDirPath \u83b7\u53d6\u5916\u5b58\u5e94\u7528\u901a\u77e5\u8def\u5f84 internalCacheDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u7f13\u5b58\u8def\u5f84 internalFileDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u6587\u4ef6\u8def\u5f84 internalPicturesDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u56fe\u7247\u8def\u5f84 internalMoviesDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u89c6\u9891\u8def\u5f84 internalDownloadsDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u4e0b\u8f7d\u8def\u5f84 internalDocumentsDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u6587\u6863\u8def\u5f84 internalMusicDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u97f3\u4e50\u8def\u5f84 internalPodcastsDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u64ad\u5ba2\u8def\u5f84 internalRingtonesDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u94c3\u58f0\u8def\u5f84 internalNotificationsDirPath \u83b7\u53d6\u5185\u5b58\u5e94\u7528\u901a\u77e5\u8def\u5f84 isExternalStorageWritable \u5224\u65ad\u5916\u5b58\u662f\u5426\u53ef\u8bfb\u5199 isExternalStorageReadable \u5224\u65ad\u5916\u5b58\u662f\u5426\u53ef\u8bfb isExternalStorageRemovable \u5224\u65ad\u5916\u5b58\u662f\u5426\u53ef\u79fb\u9664","title":"Paths.kt"},{"location":"utils-helper/#resourcekt","text":"\u7528\u6cd5 \u4f5c\u7528 View.getString(id) \u6839\u636e id \u83b7\u53d6\u5b57\u7b26\u4e32 Context/Fragment/View.getDimension(id) \u6839\u636e id \u83b7\u53d6\u6570\u5b57 Context/Fragment/View.getCompatColor(id) \u6839\u636e id \u83b7\u53d6\u989c\u8272 Context/Fragment/View.getCompatDrawable(id) \u6839\u636e id \u83b7\u53d6 Drawable Context/Fragment/View.getCompatFont(id) \u6839\u636e id \u83b7\u53d6\u5b57\u4f53 parseColor(colorString) \u6839\u636e\u5b57\u7b26\u4e32\u83b7\u53d6\u989c\u8272","title":"Resource.kt"},{"location":"utils-helper/#romkt","text":"\u7528\u6cd5 \u4f5c\u7528 isXiaomiRom \u5224\u65ad\u662f\u5426\u662f\u5c0f\u7c73 Rom isHuaweiRom \u5224\u65ad\u662f\u5426\u662f\u534e\u4e3a Rom isOppoRom \u5224\u65ad\u662f\u5426\u662f OPPO Rom isVivoRom \u5224\u65ad\u662f\u5426\u662f vivo Rom isOnePlusRom \u5224\u65ad\u662f\u5426\u662f\u4e00\u52a0 Rom isSmartisanRom \u5224\u65ad\u662f\u5426\u662f\u9524\u5b50 Rom isMeiZuRom \u5224\u65ad\u662f\u5426\u662f\u9b45\u65cf Rom isSamsungRom \u5224\u65ad\u662f\u5426\u662f\u4e09\u661f Rom isGoogleRom \u5224\u65ad\u662f\u5426\u662f\u8c37\u6b4c Rom isSonyRom \u5224\u65ad\u662f\u5426\u662f\u7d22\u5c3c Rom isRomOf(names) \u5224\u65ad\u662f\u5426\u662f\u67d0\u4e2a Rom isHarmonyOS \u5224\u65ad\u662f\u5426\u662f\u9e3f\u8499\u7cfb\u7edf","title":"Rom.kt"},{"location":"utils-helper/#screenkt","text":"\u7528\u6cd5 \u4f5c\u7528 screenWidth \u83b7\u53d6\u5c4f\u5e55\u5bbd\u5ea6 screenHeight \u83b7\u53d6\u5c4f\u5e55\u9ad8\u5ea6 Activity/Fragment.isFullScreen \u5224\u65ad\u6216\u8bbe\u7f6e\u662f\u5426\u5168\u5c4f Activity/Fragment.isLandscape \u5224\u65ad\u6216\u8bbe\u7f6e\u662f\u5426\u6a2a\u5c4f Activity/Fragment.isPortrait \u5224\u65ad\u6216\u8bbe\u7f6e\u662f\u5426\u7ad6\u5c4f","title":"Screen.kt"},{"location":"utils-helper/#shellkt","text":"\u7528\u6cd5 \u4f5c\u7528 executeCmd(command) \u6267\u884c\u547d\u4ee4","title":"Shell.kt"},{"location":"utils-helper/#statusbarkt","text":"\u7528\u6cd5 \u4f5c\u7528 Activity.immersive([view], [darkMode]) \u8bbe\u7f6e\u5168\u900f\u660e\u72b6\u6001\u680f\u6216\u8005\u72b6\u6001\u680f\u989c\u8272 Activity.immersiveRes([color], [darkMode]) \u548c\u4e0a\u9762\u51fd\u6570\u533a\u522b\u662f\u4f7f\u7528\u989c\u8272\u8d44\u6e90\u503c Activity.darkMode([darkMode]) \u8bbe\u7f6e\u72b6\u6001\u680f\u6587\u5b57\u989c\u8272\u4e3a\u9ed1\u8272 View.statusPadding() \u4e3a View \u7684 PaddingTop \u589e\u52a0\u4e00\u4e2a\u72b6\u6001\u680f\u9ad8\u5ea6 Activity.setNavigationBar \u663e\u793a\u5bfc\u822a\u680f (\u7cfb\u7edf\u5f00\u542f\u53ef\u4ee5\u9690\u85cf, \u7cfb\u7edf\u672a\u5f00\u542f\u4e0d\u80fd\u5f00\u542f) Activity.setFullscreen \u663e\u793a\u5168\u5c4f Activity?.isNavigationBar \u662f\u5426\u5b58\u5728\u5bfc\u822a\u680f Context?.navigationBarHeight \u5bfc\u822a\u680f\u9ad8\u5ea6 Context?.statusBarHeight \u72b6\u6001\u680f\u9ad8\u5ea6","title":"StatusBar.kt"},{"location":"utils-helper/#stringkt","text":"\u7528\u6cd5 \u4f5c\u7528 randomUUIDString \u83b7\u53d6\u968f\u673a UUID \u5b57\u7b26\u4e32 Long.toFileSizeString() \u6570\u5b57\u8f6c\u6587\u4ef6\u5927\u5c0f\u5b57\u7b26\u4e32 Long.toShortFileSizeString() \u6570\u5b57\u8f6c\u7cbe\u5ea6\u4f4d\u6570\u8f83\u5c11\u7684\u6587\u4ef6\u5927\u5c0f\u5b57\u7b26\u4e32 String.limitLength(length: Int) \u9650\u5236\u5b57\u7b26\u957f\u5ea6 String.isPhone() \u5224\u65ad\u662f\u5426\u662f\u624b\u673a\u53f7 String.isDomainName() \u5224\u65ad\u662f\u5426\u662f\u57df\u540d String.isEmail() \u5224\u65ad\u662f\u5426\u662f\u90ae\u7bb1 String.isIP() \u5224\u65ad\u662f\u5426\u662f IP \u5730\u5740 String.isWebUrl() \u5224\u65ad\u662f\u5426\u662f\u7f51\u5740 String.isIDCard15() \u5224\u65ad\u662f\u5426\u662f 15 \u4f4d\u8eab\u4efd\u8bc1\u53f7\u7801 String.isIDCard18() \u5224\u65ad\u662f\u5426\u662f 18 \u4f4d\u8eab\u4efd\u8bc1\u53f7\u7801 String.isJson() \u5224\u65ad\u662f\u5426\u662f Json \u5b57\u7b26\u4e32 Float/Double.toNumberString(...) \u5c0f\u6570\u8f6c\u4e3a\u5b57\u7b26\u4e32\uff0c\u9ed8\u8ba4\u4fdd\u7559\u5c0f\u6570\u70b9\u540e\u4e24\u4f4d","title":"String.kt"},{"location":"utils-helper/#threadskt","text":"\u7528\u6cd5 \u4f5c\u7528 isMainThread \u662f\u5426\u5728\u4e3b\u7ebf\u7a0b mainThread([delayMillis]) {...} \u5728\u4e3b\u7ebf\u7a0b\u8fd0\u884c","title":"Threads.kt"},{"location":"utils-helper/#toastkt","text":"\u7528\u6cd5 \u4f5c\u7528 Context/Fragment.toast(message) \u5410\u53f8 Context/Fragment.longToast(message) \u957f\u5410\u53f8","title":"Toast.kt"},{"location":"utils-helper/#viewkt","text":"\u7528\u6cd5 \u4f5c\u7528 View/List<View>.doOnClick {...} \u8bbe\u7f6e\u70b9\u51fb\u4e8b\u4ef6 View/List<View>.doOnLongClick {...} \u8bbe\u7f6e\u957f\u6309\u4e8b\u4ef6 View/List<View>.doOnDebouncingClick([interval]) {...} \u8bbe\u7f6e\u70b9\u51fb\u4e8b\u4ef6 View/List<View>.doOnDebouncingLongClick([interval]) {...} \u8bbe\u7f6e\u957f\u6309\u4e8b\u4ef6 View.expandClickArea(...) \u589e\u5927\u70b9\u51fb\u533a\u57df View.roundCorners \u8bbe\u7f6e\u5706\u89d2 View?.isTouchedAt(x, y) \u5224\u65ad\u63a7\u4ef6\u662f\u5426\u5728\u89e6\u6478\u4f4d\u7f6e\u4e0a View.findTouchedChild(view, x, y) \u5bfb\u627e\u89e6\u6478\u4f4d\u7f6e\u4e0a\u7684\u5b50\u63a7\u4ef6 View.locationOnScreen \u83b7\u53d6\u63a7\u4ef6\u5728\u5c4f\u5e55\u7684\u4f4d\u7f6e View.withStyledAttributes(set, attrs, [defStyleAttr], [defStyleRes]) {...} \u83b7\u53d6\u81ea\u5b9a\u4e49\u5c5e\u6027 View.rootWindowInsetsCompat \u83b7\u53d6\u6839\u89c6\u56fe\u7684 WinowInsetsCompat View.windowInsetsControllerCompat \u83b7\u53d6 WindowInsetsControllerCompat","title":"View.kt"},{"location":"utils-helper/#viewmodelkt","text":"\u7528\u6cd5 \u4f5c\u7528 by ComponentActivity/Fragment.applicationViewModels() \u83b7\u53d6 Application \u7ea7\u522b\u7684 ViewModel \u5b9e\u4f8b\uff0c\u652f\u6301 Hilt","title":"ViewModel.kt"},{"location":"utils-helper/#api","text":"\u5177\u4f53\u67e5\u770b","title":"Api"},{"location":"viewbinding-helper/","text":"ViewBinding\u5de5\u5177\u7c7b \u00b6 Gradle \u00b6 \u5728\u6839\u76ee\u5f55\u7684 build.gradle \u6dfb\u52a0\uff1a allprojects { repositories { // ... maven { url 'https://www.jitpack.io' } } } \u6dfb\u52a0\u4f9d\u8d56\uff1a api \"com.github.GuoYangGit.AndroidUtils:viewbinding-helper:xxx\" \u4f7f\u7528\u6269\u5c55\u51fd\u6570 \u00b6 \u5728 Adapter \u91cc\u4f7f\u7528 BindingViewHolder \uff0c\u65e0\u9700\u518d\u5199\u4e2a\u7c7b\u7ee7\u627f RecycleView.ViewHolder \u3002 Adapter \u00b6 class TextAdapter : ListAdapter < String , BindingViewHolder < ItemTextBinding >> ( DiffCallback ()) { override fun onCreateViewHolder ( parent : ViewGroup , viewType : Int ) = BindingViewHolder < ItemTextBinding > ( parent ) . withBinding { root . setOnClickListener { ... } tvText . setOnClickListener { ... } } override fun onBindViewHolder ( holder : BindingViewHolder < ItemTextBinding > , position : Int ) { holder . binding . tvText . text = currentList [ position ] } class DiffCallback : DiffUtil . ItemCallback < String > () { override fun areItemsTheSame ( oldItem : String , newItem : String ) = oldItem == newItem override fun areContentsTheSame ( oldItem : String , newItem : String ) = oldItem == newItem } } TabLayout \u00b6 \u4ee5\u4e0b\u662f TabLayout + ViewPager2 \u5b9e\u73b0\u81ea\u5b9a\u4e49\u5e95\u90e8\u5bfc\u822a\u680f\u7684\u793a\u4f8b\u3002 TabLayoutMediator ( tabLayout , viewPager2 ) { tab , position -> tab . setCustomView < LayoutBottomTabBinding > { tvTitle . setText ( titleList [ position ] ) tvTitle . textSize = if ( position == 0 ) 12f else 10f ivIcon . setImageResource ( iconList [ position ] ) ivIcon . contentDescription = tvTitle . text . toString () } }. attach () tabLayout . doOnCustomTabSelected < LayoutBottomTabBinding > ( onTabSelected = { tvTitle . textSize = 12f }, onTabUnselected = { tvTitle . textSize = 10f }) \u5c01\u88c5\u57fa\u7c7b \u00b6 \u7ed9\u57fa\u7c7b\u589e\u52a0\u4e00\u4e2a ViewBinding \u6cdb\u578b\uff1b Activity \u57fa\u7c7b\u5b9e\u73b0 ActivityBinding < VB > by ActivityBindingDelegate () \uff0c Fragment \u57fa\u7c7b\u5b9e\u73b0 FragmentBinding < VB > by FragmentBindingDelegate () \uff1b \u5728 Activity \u57fa\u7c7b\u8c03\u7528 setContentViewWithBinding () \u51fd\u6570\uff0c\u5728 Fragment \u57fa\u7c7b\u8c03\u7528 createViewWithBinding ( inflater , container ) \uff1b Activity \u00b6 Activity \u57fa\u7c7b\u7684\u6838\u5fc3\u6539\u9020\u4ee3\u7801\uff1a abstract class BaseBindingActivity < VB : ViewBinding > : AppCompatActivity (), ActivityBinding < VB > by ActivityBindingDelegate () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContentViewWithBinding () } } Activity \u57fa\u7c7b\u6539\u9020\u540e\u7684\u4f7f\u7528\u793a\u4f8b\uff1a class MainActivity : BaseBindingActivity < ActivityMainBinding > () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding . tvHelloWorld . text = \"Hello Android!\" } } Fragment \u00b6 Fragment \u57fa\u7c7b\u7684\u6838\u5fc3\u6539\u9020\u4ee3\u7801\uff1a abstract class BaseBindingFragment < VB : ViewBinding > : Fragment (), FragmentBinding < VB > by FragmentBindingDelegate () { override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle? ): View? { return createViewWithBinding ( inflater , container ) } } Fragment \u57fa\u7c7b\u6539\u9020\u540e\u7684\u4f7f\u7528\u793a\u4f8b\uff1a class HomeFragment : BaseBindingFragment < FragmentHomeBinding > () { override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) binding . tvHelloWorld . text = \"Hello Android!\" } } Api \u00b6 \u5177\u4f53\u67e5\u770b","title":"viewbinding\u6a21\u5757"},{"location":"viewbinding-helper/#viewbinding","text":"","title":"ViewBinding\u5de5\u5177\u7c7b"},{"location":"viewbinding-helper/#gradle","text":"\u5728\u6839\u76ee\u5f55\u7684 build.gradle \u6dfb\u52a0\uff1a allprojects { repositories { // ... maven { url 'https://www.jitpack.io' } } } \u6dfb\u52a0\u4f9d\u8d56\uff1a api \"com.github.GuoYangGit.AndroidUtils:viewbinding-helper:xxx\"","title":"Gradle"},{"location":"viewbinding-helper/#_1","text":"\u5728 Adapter \u91cc\u4f7f\u7528 BindingViewHolder \uff0c\u65e0\u9700\u518d\u5199\u4e2a\u7c7b\u7ee7\u627f RecycleView.ViewHolder \u3002","title":"\u4f7f\u7528\u6269\u5c55\u51fd\u6570"},{"location":"viewbinding-helper/#adapter","text":"class TextAdapter : ListAdapter < String , BindingViewHolder < ItemTextBinding >> ( DiffCallback ()) { override fun onCreateViewHolder ( parent : ViewGroup , viewType : Int ) = BindingViewHolder < ItemTextBinding > ( parent ) . withBinding { root . setOnClickListener { ... } tvText . setOnClickListener { ... } } override fun onBindViewHolder ( holder : BindingViewHolder < ItemTextBinding > , position : Int ) { holder . binding . tvText . text = currentList [ position ] } class DiffCallback : DiffUtil . ItemCallback < String > () { override fun areItemsTheSame ( oldItem : String , newItem : String ) = oldItem == newItem override fun areContentsTheSame ( oldItem : String , newItem : String ) = oldItem == newItem } }","title":"Adapter"},{"location":"viewbinding-helper/#tablayout","text":"\u4ee5\u4e0b\u662f TabLayout + ViewPager2 \u5b9e\u73b0\u81ea\u5b9a\u4e49\u5e95\u90e8\u5bfc\u822a\u680f\u7684\u793a\u4f8b\u3002 TabLayoutMediator ( tabLayout , viewPager2 ) { tab , position -> tab . setCustomView < LayoutBottomTabBinding > { tvTitle . setText ( titleList [ position ] ) tvTitle . textSize = if ( position == 0 ) 12f else 10f ivIcon . setImageResource ( iconList [ position ] ) ivIcon . contentDescription = tvTitle . text . toString () } }. attach () tabLayout . doOnCustomTabSelected < LayoutBottomTabBinding > ( onTabSelected = { tvTitle . textSize = 12f }, onTabUnselected = { tvTitle . textSize = 10f })","title":"TabLayout"},{"location":"viewbinding-helper/#_2","text":"\u7ed9\u57fa\u7c7b\u589e\u52a0\u4e00\u4e2a ViewBinding \u6cdb\u578b\uff1b Activity \u57fa\u7c7b\u5b9e\u73b0 ActivityBinding < VB > by ActivityBindingDelegate () \uff0c Fragment \u57fa\u7c7b\u5b9e\u73b0 FragmentBinding < VB > by FragmentBindingDelegate () \uff1b \u5728 Activity \u57fa\u7c7b\u8c03\u7528 setContentViewWithBinding () \u51fd\u6570\uff0c\u5728 Fragment \u57fa\u7c7b\u8c03\u7528 createViewWithBinding ( inflater , container ) \uff1b","title":"\u5c01\u88c5\u57fa\u7c7b"},{"location":"viewbinding-helper/#activity","text":"Activity \u57fa\u7c7b\u7684\u6838\u5fc3\u6539\u9020\u4ee3\u7801\uff1a abstract class BaseBindingActivity < VB : ViewBinding > : AppCompatActivity (), ActivityBinding < VB > by ActivityBindingDelegate () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContentViewWithBinding () } } Activity \u57fa\u7c7b\u6539\u9020\u540e\u7684\u4f7f\u7528\u793a\u4f8b\uff1a class MainActivity : BaseBindingActivity < ActivityMainBinding > () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding . tvHelloWorld . text = \"Hello Android!\" } }","title":"Activity"},{"location":"viewbinding-helper/#fragment","text":"Fragment \u57fa\u7c7b\u7684\u6838\u5fc3\u6539\u9020\u4ee3\u7801\uff1a abstract class BaseBindingFragment < VB : ViewBinding > : Fragment (), FragmentBinding < VB > by FragmentBindingDelegate () { override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle? ): View? { return createViewWithBinding ( inflater , container ) } } Fragment \u57fa\u7c7b\u6539\u9020\u540e\u7684\u4f7f\u7528\u793a\u4f8b\uff1a class HomeFragment : BaseBindingFragment < FragmentHomeBinding > () { override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) binding . tvHelloWorld . text = \"Hello Android!\" } }","title":"Fragment"},{"location":"viewbinding-helper/#api","text":"\u5177\u4f53\u67e5\u770b","title":"Api"},{"location":"xlog-helper/","text":"Log\u65e5\u5fd7\u5e93(\u57fa\u4e8eXLog\u5b9e\u73b0) \u00b6 \u8be5\u5e93\u4e3b\u8981\u7528\u4e8e\u65e5\u5fd7\u6253\u5370\u548c\u672c\u5730\u5316\u4fdd\u5b58\uff0c\u8003\u8651\u6027\u80fd\u65b9\u9762\u7684\u95ee\u9898\uff0c\u57fa\u4e8e mars-xlog \u5b9e\u73b0\u3002 Gradle \u00b6 \u5728\u6839\u76ee\u5f55\u7684 build.gradle \u6dfb\u52a0\uff1a allprojects { repositories { // ... maven { url 'https://www.jitpack.io' } } } \u6dfb\u52a0\u914d\u7f6e\u548c\u4f9d\u8d56\uff1a api \"com.github.GuoYangGit.AndroidUtils:xloghelper:xxx\" \u521d\u59cb\u5316 \u00b6 \u5728 Application \u7684 onCreate \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c( \u5efa\u8bae\u521d\u59cb\u5316\u8d8a\u65e9\u8d8a\u597d ) class MyApplication : Application (){ override fun onCreate () { // \u521d\u59cb\u5316\u65e5\u5fd7\u6253\u5370 LogHelper . init ( application , BuildConfig . DEBUG , LOG_PATH ) { this . pubKey = XLOG_PUBKEY // \u8fd9\u91cc\u662f\u65e5\u5fd7\u6587\u4ef6\u52a0\u5bc6\u516c\u94a5 } } } \u65e5\u5fd7\u6253\u5370 \u00b6 \u4e0b\u9762\u7528\u6cd5\u4e2d\u542b\u6709\u65b9\u62ec\u53f7 [] \u7684\u53c2\u6570\u662f\u53ef\u9009\u7684\u3002 \u65b9\u6cd5 \u8bf4\u660e xLogV([tag], message) \u8be6\u7ec6\u65e5\u5fd7\u8f93\u51fa xLogD([tag], message) \u8c03\u8bd5\u65e5\u5fd7\u8f93\u51fa xLogI([tag], message) \u4fe1\u606f\u65e5\u5fd7\u8f93\u51fa xLogW([tag], message) \u8b66\u544a\u65e5\u5fd7\u8f93\u51fa xLogE([tag], message) \u9519\u8bef\u65e5\u5fd7\u8f93\u51fa xLogF([tag], message) \u81f4\u547d\u65e5\u5fd7\u8f93\u51fa Api \u00b6 \u5177\u4f53\u67e5\u770b","title":"xlog\u6a21\u5757"},{"location":"xlog-helper/#logxlog","text":"\u8be5\u5e93\u4e3b\u8981\u7528\u4e8e\u65e5\u5fd7\u6253\u5370\u548c\u672c\u5730\u5316\u4fdd\u5b58\uff0c\u8003\u8651\u6027\u80fd\u65b9\u9762\u7684\u95ee\u9898\uff0c\u57fa\u4e8e mars-xlog \u5b9e\u73b0\u3002","title":"Log\u65e5\u5fd7\u5e93(\u57fa\u4e8eXLog\u5b9e\u73b0)"},{"location":"xlog-helper/#gradle","text":"\u5728\u6839\u76ee\u5f55\u7684 build.gradle \u6dfb\u52a0\uff1a allprojects { repositories { // ... maven { url 'https://www.jitpack.io' } } } \u6dfb\u52a0\u914d\u7f6e\u548c\u4f9d\u8d56\uff1a api \"com.github.GuoYangGit.AndroidUtils:xloghelper:xxx\"","title":"Gradle"},{"location":"xlog-helper/#_1","text":"\u5728 Application \u7684 onCreate \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c( \u5efa\u8bae\u521d\u59cb\u5316\u8d8a\u65e9\u8d8a\u597d ) class MyApplication : Application (){ override fun onCreate () { // \u521d\u59cb\u5316\u65e5\u5fd7\u6253\u5370 LogHelper . init ( application , BuildConfig . DEBUG , LOG_PATH ) { this . pubKey = XLOG_PUBKEY // \u8fd9\u91cc\u662f\u65e5\u5fd7\u6587\u4ef6\u52a0\u5bc6\u516c\u94a5 } } }","title":"\u521d\u59cb\u5316"},{"location":"xlog-helper/#_2","text":"\u4e0b\u9762\u7528\u6cd5\u4e2d\u542b\u6709\u65b9\u62ec\u53f7 [] \u7684\u53c2\u6570\u662f\u53ef\u9009\u7684\u3002 \u65b9\u6cd5 \u8bf4\u660e xLogV([tag], message) \u8be6\u7ec6\u65e5\u5fd7\u8f93\u51fa xLogD([tag], message) \u8c03\u8bd5\u65e5\u5fd7\u8f93\u51fa xLogI([tag], message) \u4fe1\u606f\u65e5\u5fd7\u8f93\u51fa xLogW([tag], message) \u8b66\u544a\u65e5\u5fd7\u8f93\u51fa xLogE([tag], message) \u9519\u8bef\u65e5\u5fd7\u8f93\u51fa xLogF([tag], message) \u81f4\u547d\u65e5\u5fd7\u8f93\u51fa","title":"\u65e5\u5fd7\u6253\u5370"},{"location":"xlog-helper/#api","text":"\u5177\u4f53\u67e5\u770b","title":"Api"}]}